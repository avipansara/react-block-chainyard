{"version":3,"sources":["Components/header.js","api/blockchainapi.js","Components/routers/BlocksList.js","Components/routers/LatestBlock.js","Components/routers/SelectedBlock.js","Components/routers/Transcation.js","Components/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","axios","create","baseURL","params","cors","format","BlockList","state","data","BlockChainAPI","get","response","this","setState","blocks","map","block","key","hash","style","color","height","time","concat","renderAllBlock","React","Component","LatestBlock","latest","marginTop","fontWeight","block_index","SelectedBlock","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","match","aria-hidden","Table","TableBody","TableRow","TableCell","ver","prev_block","mrkl_root","bits","nonce","n_tx","size","txs","tx","tx_index","fee","renderSingleBlock","renderAllTransaction","Transaction","tx_hash","tx_details","lock_time","weight","block_height","relayed_by","renderTransaction","App","BrowserRouter","header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","Components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.898865b9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"ui inverted menu\">\r\n            <Link to=\"/\" className=\"item\">Chainyard <i className=\"linkify icon\"></i></Link>\r\n            <div className=\"right menu\">\r\n                <Link to=\"/\" className=\"item\">Today's Block </Link>\r\n                <Link to=\"/latestblock\" className=\"item\">Latest Block </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import axios from 'axios';\r\n\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://blockchain.info/',\r\n    params: {\r\n        cors: true,\r\n        format: 'json',\r\n      },\r\n    });\r\n","import React from 'react';\r\nimport  {Link}  from 'react-router-dom';\r\n\r\nimport BlockChainAPI from '../../api/blockchainapi';\r\n\r\n\r\nclass BlockList extends React.Component{\r\n    state = { data:[] };\r\n\r\n\r\n    // waits until it recieves data from API\r\n    async componentDidMount(){\r\n        const response = await BlockChainAPI.get('blocks');\r\n        //console.log(response.data.blocks);\r\n        this.setState({data:response.data.blocks}); \r\n    }\r\n\r\n    //Helper method, renders one by one\r\n    renderAllBlock(){\r\n        if(this.state.data.map){\r\n        return this.state.data.map(block => {\r\n            return ( \r\n                <div className=\"item\" key={block.hash}> \r\n                    <i className=\"marker icon\" />\r\n                    <div className=\"content\">\r\n                        <div className=\"description\">\r\n                            <h4><span style={{\"color\":\"#217ad0\"}}>Hash:</span>{block.hash}</h4>\r\n                            <p><span style={{\"color\":\"#217ad0\"}}>Height:</span>{block.height}</p>\r\n                            <p><span style={{\"color\":\"#217ad0\"}}>Time: </span>{block.time}</p>\r\n                            <div className=\"right floated content\">\r\n                                <Link to={`/singleblock/${block.hash}`}>\r\n                                    <button style={{\"color\":\"white\"}} className=\"ui blue button\">Show</button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    else{\r\n        return <div className=\"ui active centered inline loader\"></div>}\r\n    }\r\n   \r\n\r\n    render(){\r\n        return (\r\n            <div className=\"ui container\">\r\n             <div className=\"ui relaxed divided list\">{this.renderAllBlock()}</div>\r\n            </div>\r\n        )}\r\n}\r\n\r\nexport default BlockList;","import React from 'react';\r\n\r\nimport BlockChainAPI from '../../api/blockchainapi';\r\n\r\nclass LatestBlock extends React.Component{\r\n\r\n    state = {data:[]}\r\n\r\n    async componentDidMount(){\r\n        const response = await BlockChainAPI.get('latestblock');\r\n        this.setState({data:response.data});\r\n    }\r\n\r\n    render(){\r\n        const latest = this.state.data;\r\n        return (\r\n            <div>\r\n                <div className=\"ui teal tag label\"><h4>Latest Block</h4></div>\r\n                <div className=\"ui raised segment\" style={{\"marginTop\":\"30px\"}}>\r\n                <div className=\"ui blue ribbon label\" ><div><h4>Hash : </h4></div><span style={{\"fontWeight\":\"bold\"}}>{latest.hash}</span></div>\r\n                <div className=\"ui blue ribbon label\" ><div><h4>Time</h4></div><span style={{\"fontWeight\":\"bold\"}}>{latest.time}</span></div>\r\n                <div className=\"ui blue ribbon label\" ><div><h4>Block Index</h4></div><span style={{\"fontWeight\":\"bold\"}}>{latest.block_index}</span></div>\r\n                <div className=\"ui blue ribbon label\" ><div><h4>Height</h4></div><span style={{\"fontWeight\":\"bold\"}}>{latest.height}</span></div></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LatestBlock;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport BlockChainAPI from '../../api/blockchainapi';\r\nimport { TableBody, TableRow, TableCell, Table } from 'semantic-ui-react';\r\n\r\nclass SelectedBlock extends React.Component {\r\n    state =   {data: []}\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.hash = this.props.match.params.hash;\r\n      }\r\n\r\n    async componentDidMount(){\r\n        const response = await BlockChainAPI.get(`rawblock/${this.hash}`);\r\n        this.setState({data:response.data});\r\n    }\r\n\r\n    // Renders single block \r\n    renderSingleBlock(){\r\n        if(this.state){\r\n            const {data} = this.state;\r\n        return (\r\n            <div>\r\n            <div className=\"ui horizontal divider\">\r\n                <h4 className=\"ui header\"><i aria-hidden=\"true\" className=\"bar chart icon\"></i>Single Block</h4>\r\n            </div>\r\n            <div>\r\n                <Table className=\"ui definition table\">\r\n                    <TableBody className=\"\">\r\n                        <TableRow className=\"\">\r\n                            <TableCell className=\"two wide\">Hash</TableCell>\r\n                            <TableCell className=\"\">{data.hash}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow className=\"\">\r\n                            <TableCell className=\"\">Ver</TableCell>\r\n                            <TableCell className=\"\">{data.ver}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow className=\"\">\r\n                            <TableCell className=\"\">Previous Block</TableCell>\r\n                            <TableCell className=\"\">{data.prev_block}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow className=\"\">\r\n                            <TableCell className=\"\">Merkle Root</TableCell>\r\n                            <TableCell className=\"\">{data.mrkl_root}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow className=\"\">\r\n                            <TableCell className=\"\">Time</TableCell>\r\n                            <TableCell className=\"\">{data.time}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow className=\"\">\r\n                            <TableCell className=\"\">Bits</TableCell>\r\n                            <TableCell className=\"\">{data.bits}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow className=\"\">\r\n                            <TableCell className=\"\">Nonce</TableCell>\r\n                            <TableCell className=\"\">{data.nonce}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow className=\"\">\r\n                            <TableCell className=\"\">Number of Transactions</TableCell>\r\n                            <TableCell className=\"\">{data.n_tx}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow className=\"\">\r\n                            <TableCell className=\"\">Size</TableCell>\r\n                            <TableCell className=\"\">{data.size}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow className=\"\">\r\n                            <TableCell className=\"\">Block Index</TableCell>\r\n                            <TableCell className=\"\">{data.block_index}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow className=\"\">\r\n                            <TableCell className=\"\">Height</TableCell>\r\n                            <TableCell className=\"\">{data.height}</TableCell>\r\n                        </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n        )}\r\n        else{\r\n            return <div className=\"ui loading segment\">Loading</div>\r\n        }\r\n    }\r\n\r\n    // Renders all transaction of single block\r\n    renderAllTransaction(){\r\n        const txs = this.state.data.tx;\r\n        if(txs){\r\n        return txs.map(tx => {\r\n            return (\r\n                <div className=\"ui card sixteen wide column\" key={tx.tx_index}>\r\n                    <div className=\"content\">\r\n                        <div className=\"ui mini right floated\"><h3>Size:{tx.size}</h3></div>\r\n                        <div className=\"header\">Transaction Index</div>\r\n                        <div className=\"meta\"><h3>{tx.tx_index}</h3></div>\r\n                        <div className=\"description\"><strong>Fee:</strong>{tx.fee}</div>\r\n                    </div>\r\n                    <div className=\"extra content\">\r\n                        <Link to={`transaction/${tx.hash}`} className=\"ui two buttons\">\r\n                            <button className=\"ui facebook button\">More</button>\r\n                        </Link>    \r\n                    </div>\r\n                </div>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n      return (\r\n          <div>\r\n            <div>{this.renderSingleBlock()}</div>\r\n            <div className=\"ui horizontal divider\">\r\n                <h4 className=\"ui header\"><i aria-hidden=\"true\" className=\"tag icon\"></i>Transactions</h4>\r\n            </div>\r\n            <div className=\"ui grid cards\">\r\n            {this.renderAllTransaction()}</div>\r\n          </div>\r\n      )}\r\n}\r\n\r\nexport default SelectedBlock;","import React from 'react';\r\nimport BlockChainAPI from '../../api/blockchainapi';\r\n\r\nclass Transaction extends React.Component{\r\n    state = {data:[]};\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.tx_hash = this.props.match.params.hash;\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const response = await BlockChainAPI.get(`rawtx/${this.tx_hash}`);\r\n        this.setState({data:response.data});\r\n    }\r\n\r\n    //Renders single transaction\r\n    renderTransaction(){\r\n        if(this.state){\r\n            const tx_details = this.state.data;\r\n        return (\r\n            <div>\r\n                <div className=\"ui red ribbon label\"><h4>Transaction Details</h4></div>\r\n                    <div className=\"ui piled segment\" style={{\"marginTop\":\"30px\"}}>\r\n                    <div className=\"ui tag labels\" ><div className=\"ui label\"><h4>Hash</h4></div><span style={{\"fontWeight\":\"bold\"}}>{tx_details.hash}</span></div>\r\n                    <div className=\"ui tag labels\" ><div className=\"ui label\"><h4>Lock Time</h4></div><span style={{\"fontWeight\":\"bold\"}}>{tx_details.lock_time}</span></div>\r\n                    <div className=\"ui tag labels\" ><div className=\"ui label\"><h4>Weight</h4></div><span style={{\"fontWeight\":\"bold\"}}>{tx_details.weight}</span></div>\r\n                    <div className=\"ui tag labels\" ><div className=\"ui label\"><h4>Block Height</h4></div><span style={{\"fontWeight\":\"bold\"}}>{tx_details.block_height}</span></div>\r\n                    <div className=\"ui tag labels\" ><div className=\"ui label\"><h4>Relayed By</h4></div><span style={{\"fontWeight\":\"bold\"}}>{tx_details.relayed_by}</span></div>\r\n                    <div className=\"ui tag labels\" ><div className=\"ui label\"><h4>Block Index</h4></div><span style={{\"fontWeight\":\"bold\"}}>{tx_details.block_index}</span></div>\r\n                    </div>\r\n                </div>\r\n        )}\r\n        else{\r\n        return(\r\n        <div className=\"ui loading segment\"><div className=\"ui image\"></div></div>\r\n         )}\r\n    }\r\n\r\n    render(){\r\n        return <div>{this.renderTransaction()}</div>\r\n    }\r\n}\r\n\r\nexport default Transaction;","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Header from './header';\r\nimport BlockList from './routers/BlocksList';\r\nimport LatestBlock from './routers/LatestBlock';\r\nimport SelectedBlock from './routers/SelectedBlock';\r\nimport Transaction from './routers/Transcation';\r\n\r\nconst App = () => {\r\n  //navigation functionality\r\n  return (\r\n    <div className=\"ui container\">\r\n      <Router>\r\n        <div> \r\n          <Header />\r\n          <Switch>\r\n          <Route exact path='/' component={BlockList} />\r\n          <Route exact path='/latestblock' component={LatestBlock} />\r\n          <Route exact path='/singleblock/:hash' component={SelectedBlock} />\r\n          <Route exact path='/singleblock/transaction/:hash' component={Transaction} />\r\n        </Switch>\r\n        </div>\r\n       \r\n        </Router>\r\n  </div>\r\n  )\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}